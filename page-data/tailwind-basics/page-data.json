{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/tailwind-basics",
    "result": {"data":{"markdownRemark":{"html":"<p>I'm going to need you to suspend everything you know about CSS best practices for this section. At the start this going to feel gross and weird. But stick with me. I initially had similar feelings towards React too.</p>\n<p>We are not going to be writing <em>any</em> CSS (well, one little bit but THAT'S IT.) Tailwind is all about just using tiny utility classes and then having that be all the CSS you ever need. Let's see something <em>super basic</em>.</p>\n<blockquote>\n<p>There are old class names from the previous CSS styling we had. Feel free to delete them or leave them. It doesn't matter. I haphazardly deleted them as I overwrote them with new class names.</p>\n</blockquote>\n<p>In App.js, put this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// the div right inside &lt;ThemeContext.Provider></span>\n<span class=\"token operator\">&lt;</span>div\n  className<span class=\"token operator\">=</span><span class=\"token string\">\"p-0 m-0\"</span>\n  style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">\"url(http://pets-images.dev-apis.com/pets/wallpaperA.jpg)\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">[</span>…<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>The <code class=\"language-text\">p-0</code> and <code class=\"language-text\">m-0</code> is what Tailwind is a lot of: putting a lot of tiny utility classes on HTML elements. In this case: we're making it so the encapsulating div has zero padding and zero margin. If we wanted it to have a little of either, it'd <code class=\"language-text\">m-1</code> or <code class=\"language-text\">p-1</code>. There's *-1 through 12 and then there it's more a random increase with 12, 14, 16, 20, 24, 28, 32, 36, 40, etc. all the way up to 96. There's also <code class=\"language-text\">-m-1</code> for <em>negative</em> margins. There's also mt, ml, mr, mb for top, left, right, bottom and mx for left and right and my for top and bottom (these all apply to p as well.)</li>\n<li>We do have to apply the background image via styles. You'll find you'll occasionally need to do it for things that Tailwind doesn't do (like URLs) but for the most part you shouldn't need to.</li>\n</ul>\n<p>Let's do the whole header now.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>header className<span class=\"token operator\">=</span><span class=\"token string\">\"w-full mb-10 text-center p-7 bg-gradient-to-b from-purple-400 via-pink-500 to-red-500\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Link className<span class=\"token operator\">=</span><span class=\"token string\">\"text-6xl text-white hover:text-gray-200\"</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n    Adopt Me<span class=\"token operator\">!</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>That's more what you'll see! Long class strings. I imagine some of you are upset looking at this. To be honest it's still strange to me. But we're also skinning a whole app with <em>zero</em> CSS so it's a pretty compelling experience.</li>\n<li>Like p and m, we have w and h. <code class=\"language-text\">w-1</code> would have a tiny width. <code class=\"language-text\">w-full</code> is width: 100%.</li>\n<li><code class=\"language-text\">bg-gradient-to-b from-purple-400 via-pink-500 to-red-500</code> is a gradient just using classes. <code class=\"language-text\">bg-gradient-to-b</code> says it goes from the top to bottom (you can do -to-l, -to-r, or -to-t as well.) The from is the start. The via is a middle stop, and the to is the end.</li>\n<li>The purple-400 is a purple color and the 400 is the <em>lightness</em> of it. 50 is nearly white, 900 is as dark as the color gets.</li>\n<li>You can set your own colors via the theme but the default ones are really good.</li>\n<li><code class=\"language-text\">text-6xl</code> is a really big text size. They use the sizes sm, md, lg, xl, 2xl, etc. up to 9xl.</li>\n<li><code class=\"language-text\">text-center</code> will do <code class=\"language-text\">text-align: center</code>.</li>\n<li><code class=\"language-text\">hover:&lt;stuff></code> is how we do hover, focus, disabled, etc. It takes whatever is on the right and only applies it only when that state is true. (note: disabled doesn't work without some magic in our PostCSS 7 compat layer. We'll do that in a bit.)</li>\n<li>Note: <code class=\"language-text\">&lt;Link></code> from react-router-dom will pass styles and classes down to the resulting <code class=\"language-text\">&lt;a></code> for you.</li>\n</ul>\n<p>Let's hop over to <code class=\"language-text\">SearchResults.js</code> (we're only doing SearchParams, I'll leave it to you to fix Details)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"my-0 mx-auto w-11/12\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>form\n    className<span class=\"token operator\">=</span><span class=\"token string\">\"p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col justify-center items-center divide-y divide-gray-900\"</span>\n    onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">requestPets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">[</span>…<span class=\"token punctuation\">]</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">rounded-lg</code> is a \"large\" rounding of the corners i.e. border-radius.</li>\n<li><code class=\"language-text\">shadow-lg</code> is a \"large\" border shadow.</li>\n<li><code class=\"language-text\">flex</code> makes the display mode flex. <code class=\"language-text\">flex-col</code> makes it columns. <code class=\"language-text\">justify-center</code> makes it justify-content center. <code class=\"language-text\">items-center</code> makes it <code class=\"language-text\">align-items: center</code>. Net result is that you have centered horizontally and vertically items in a vertical direction.</li>\n<li><code class=\"language-text\">divide-y</code> is pretty cool. It puts nice dividing lines between all the children elements in the div. <code class=\"language-text\">divide-gray-900</code> means they're black lines.</li>\n</ul>","frontmatter":{"path":"/tailwind-basics","title":"Tailwind Basics","order":"10B","section":"TailwindCSS","description":""}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"14D","path":"/action-creators","title":"Action Creators"}}},{"node":{"frontmatter":{"order":"3F","path":"/babel","title":"Babel"}}},{"node":{"frontmatter":{"order":"15B","path":"/basic-react-testing","title":"Basic React Testing"}}},{"node":{"frontmatter":{"order":"3G","path":"/browserslist","title":"Browserslist"}}},{"node":{"frontmatter":{"order":"5B","path":"/class-components","title":"Class Components"}}},{"node":{"frontmatter":{"order":"11A","path":"/code-splitting","title":"Code Splitting"}}},{"node":{"frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"5C","path":"/class-properties","title":"Class Properties"}}},{"node":{"frontmatter":{"order":"2B","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"7A","path":"/conclusion","title":"Conclusion of Complete Intro to React"}}},{"node":{"frontmatter":{"order":"6B","path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":"10A","path":"/css-and-react","title":"CSS and React"}}},{"node":{"frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks"}}},{"node":{"frontmatter":{"order":"16A","path":"/end-of-intermiate","title":"Conclusion of Intermediate React"}}},{"node":{"frontmatter":{"order":"14F","path":"/dispatching-actions","title":"Dispatching Actions"}}},{"node":{"frontmatter":{"order":"6A","path":"/error-boundaries","title":"Error Boundaries"}}},{"node":{"frontmatter":{"order":"3C","path":"/eslint","title":"ESLint"}}},{"node":{"frontmatter":{"order":"3D","path":"/git","title":"Git"}}},{"node":{"frontmatter":{"order":"10D","path":"/grid-and-breakpoints","title":"Grid and Breakpoints"}}},{"node":{"frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input"}}},{"node":{"frontmatter":{"order":"4B","path":"/hooks","title":"Hooks"}}},{"node":{"frontmatter":{"order":"8A","path":"/intermediate-react-v3","title":"Welcome"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"15G","path":"/istanbul","title":"Istanbul"}}},{"node":{"frontmatter":{"order":"4A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"5D","path":"/managing-state-in-class-components","title":"Managing State in Class Components"}}},{"node":{"frontmatter":{"order":"15E","path":"/mocks","title":"Mocks"}}},{"node":{"frontmatter":{"order":"3A","path":"/npm","title":"npm"}}},{"node":{"frontmatter":{"order":"3E","path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":"6C","path":"/portals-and-refs","title":"Portals and Refs"}}},{"node":{"frontmatter":{"order":"10E","path":"/positioning","title":"Positioning"}}},{"node":{"frontmatter":{"order":"3B","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"14E","path":"/providers","title":"Providers"}}},{"node":{"frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"4G","path":"/react-dev-tools","title":"React Dev Tools"}}},{"node":{"frontmatter":{"order":"5A","path":"/react-router","title":"React Router"}}},{"node":{"frontmatter":{"order":"14B","path":"/reducers","title":"Reducers"}}},{"node":{"frontmatter":{"order":"14G","path":"/redux-dev-tools","title":"Redux Dev Tools"}}},{"node":{"frontmatter":{"order":"14A","path":"/redux-getting-started","title":"Getting Started"}}},{"node":{"frontmatter":{"order":"12A","path":"/server-side-rendering","title":"Server Side Rendering"}}},{"node":{"frontmatter":{"order":"15F","path":"/snapshots","title":"Snapshots"}}},{"node":{"frontmatter":{"order":"12B","path":"/streaming-markup","title":"Streaming Markup"}}},{"node":{"frontmatter":{"order":"10B","path":"/tailwind-basics","title":"Tailwind Basics"}}},{"node":{"frontmatter":{"order":"10C","path":"/tailwind-plugins","title":"Tailwind Plugins"}}},{"node":{"frontmatter":{"order":"15D","path":"/testing-custom-hooks","title":"Testing Custom Hooks"}}},{"node":{"frontmatter":{"order":"15A","path":"/testing-react","title":"Intro to Testing React"}}},{"node":{"frontmatter":{"order":"15C","path":"/testing-ui-interactions","title":"Testing UI Interactions"}}},{"node":{"frontmatter":{"order":"13K","path":"/ts-app","title":"App"}}},{"node":{"frontmatter":{"order":"13F","path":"/ts-carousel","title":"Carousel"}}},{"node":{"frontmatter":{"order":"13D","path":"/ts-details","title":"Details"}}},{"node":{"frontmatter":{"order":"13E","path":"/ts-error-boundary","title":"ErrorBoundary"}}},{"node":{"frontmatter":{"order":"13B","path":"/ts-eslint","title":"TypeScript + ESLint"}}},{"node":{"frontmatter":{"order":"13A","path":"/ts-modal","title":"Modal"}}},{"node":{"frontmatter":{"order":"13G","path":"/ts-pet","title":"Pet"}}},{"node":{"frontmatter":{"order":"13J","path":"/ts-results","title":"Results"}}},{"node":{"frontmatter":{"order":"13I","path":"/ts-searchParams","title":"SearchParams"}}},{"node":{"frontmatter":{"order":"13C","path":"/ts-theme-context","title":"ThemeContext"}}},{"node":{"frontmatter":{"order":"13H","path":"/ts-usebreedlist","title":"useBreedList"}}},{"node":{"frontmatter":{"order":"9G","path":"/usecallback","title":"useCallback"}}},{"node":{"frontmatter":{"order":"9C","path":"/usecontext","title":"useContext"}}},{"node":{"frontmatter":{"order":"9J","path":"/usedebugvalue","title":"useDebugValue"}}},{"node":{"frontmatter":{"order":"9B","path":"/useeffect-2","title":"useEffect"}}},{"node":{"frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"9I","path":"/useimperativehandle","title":"useImperativeHandle"}}},{"node":{"frontmatter":{"order":"9H","path":"/uselayouteffect","title":"useLayoutEffect"}}},{"node":{"frontmatter":{"order":"9F","path":"/usememo","title":"useMemo"}}},{"node":{"frontmatter":{"order":"9E","path":"/usereducer","title":"useReducer"}}},{"node":{"frontmatter":{"order":"9D","path":"/useref","title":"useRef"}}},{"node":{"frontmatter":{"order":"9A","path":"/usestate","title":"useState"}}},{"node":{"frontmatter":{"order":"7B","path":"/ways-to-expand-your-app","title":"Ways to Expand on this Project"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2959687377"]}