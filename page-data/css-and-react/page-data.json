{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/css-and-react",
    "result": {"data":{"markdownRemark":{"html":"<p>There are many ways to do CSS with React. Even just in this course I've done several ways with [style-components][sc] and [emotion][emotion]. Both of those are fantastic pieces of software and could definitely still be used today. As is the case when I teach this course I try to cover the latest material and what I think is the current state-of-the-art of the industry and today I think that is [TailwindCSS][tailwind].</p>\n<p>Both style-components and emotion are libraries that execute in the JavaScript layer. They bring your CSS into your JavaScript. This allows you all the power of JavaScript to manipulate styles using JavaScript.</p>\n<p>Tailwind however is a different approach to this. And it bears mentioning that Tailwind isn't tied to React at all (whereas styled-components is and emotion mostly is.) Everything I'm showing you here is just incidentally using React (though Tailwind is particularly popular amongst React devs.)</p>\n<p>Let's get it set up. Run this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D tailwindcss@npm:@tailwindcss/postcss7-compat@2.0.3 postcss@7.0.35 autoprefixer@9.8.6 @tailwindcss/postcss7-compat@2.0.3</code></pre></div>\n<ul>\n<li>Under the hood, Parcel processes all your CSS with PostCSS with the autoprefixer plugin. This works like Babel: it means you can write modern code and it'll make it backwards compatible with older browsers. Since we're modifying the PostCSS config (like we did with Babel earlier in this project in the Intro part) we have to give it the whole config now.</li>\n<li>We're using Parcel 1 in this project. They're heads-down on making Parcel 2 a reality which supports PostCSS 8. Parcel 1 is stuck on PostCSS 7. Tailwind 2 requires PostCSS 8 but luckily they provide a compatibility library with PostCSS 7. That's what <code class=\"language-text\">npm:@tailwindcss/postcss7-compat@2.0.3</code> is doing: it's called an alias. We're installing <code class=\"language-text\">@tailwindcss/postcss7-compat</code> and then aliasing it to <code class=\"language-text\">tailwindcss</code>. If you're brave you could try upgrading to Parcel 2 and then this wouldn't be necessary.</li>\n</ul>\n<p>Okay, now let's get our Tailwind project going. Run <code class=\"language-text\">npx tailwindcss init</code>. Like <code class=\"language-text\">tsc init</code> for TypeScript, this will spit out a basic starting config in tailwind.config.js. Should look like</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">purge</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">darkMode</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or 'media' or 'class'</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">variants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now, let's go modify our <code class=\"language-text\">style.css</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> base<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> components<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> utilities<span class=\"token punctuation\">;</span></span></code></pre></div>\n<blockquote>\n<p>If you're seeing Visual Studio Code give you a warning about unknown at rules in your style.css and it bothers you, open settings, search for <code class=\"language-text\">css.lint.unknownAtRules</code> and set that to ignore.</p>\n</blockquote>\n<p>This is how we include all the things we need from Tailwind. This is what allows Tailwind to bootstrap and only include the CSS you need to make your app run.</p>\n<blockquote>\n<p>There's a great Visual Studio Code extension you should install here: [Tailwind CSS IntelliSense][tw].</p>\n</blockquote>\n<p>Lastly, we have to create <code class=\"language-text\">.postcssrc</code> in root directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"autoprefixer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tailwindcss\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nNow if you run your app you should the React app (and all the functionality should work) but it won't have any style. We're going to quickly restyle this whole app to show you how great Tailwind is and how quickly it lets you go.\n\n<span class=\"token punctuation\">[</span>tw<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> https<span class=\"token operator\">:</span><span class=\"token comment\">//marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss</span>\n<span class=\"token punctuation\">[</span>sc<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> https<span class=\"token operator\">:</span><span class=\"token comment\">//btholt.github.io/complete-intro-to-react/</span>\n<span class=\"token punctuation\">[</span>emotion<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> https<span class=\"token operator\">:</span><span class=\"token comment\">//btholt.github.io/complete-intro-to-react-v5/emotion</span>\n<span class=\"token punctuation\">[</span>tailwind<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> https<span class=\"token operator\">:</span><span class=\"token comment\">//tailwindcss.com/docs</span></code></pre></div>","frontmatter":{"path":"/css-and-react","title":"CSS and React","order":"10A","section":"TailwindCSS","description":""}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"14D","path":"/action-creators","title":"Action Creators"}}},{"node":{"frontmatter":{"order":"3F","path":"/babel","title":"Babel"}}},{"node":{"frontmatter":{"order":"15B","path":"/basic-react-testing","title":"Basic React Testing"}}},{"node":{"frontmatter":{"order":"3G","path":"/browserslist","title":"Browserslist"}}},{"node":{"frontmatter":{"order":"5B","path":"/class-components","title":"Class Components"}}},{"node":{"frontmatter":{"order":"11A","path":"/code-splitting","title":"Code Splitting"}}},{"node":{"frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"5C","path":"/class-properties","title":"Class Properties"}}},{"node":{"frontmatter":{"order":"2B","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"7A","path":"/conclusion","title":"Conclusion of Complete Intro to React"}}},{"node":{"frontmatter":{"order":"6B","path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":"10A","path":"/css-and-react","title":"CSS and React"}}},{"node":{"frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks"}}},{"node":{"frontmatter":{"order":"16A","path":"/end-of-intermiate","title":"Conclusion of Intermediate React"}}},{"node":{"frontmatter":{"order":"14F","path":"/dispatching-actions","title":"Dispatching Actions"}}},{"node":{"frontmatter":{"order":"6A","path":"/error-boundaries","title":"Error Boundaries"}}},{"node":{"frontmatter":{"order":"3C","path":"/eslint","title":"ESLint"}}},{"node":{"frontmatter":{"order":"3D","path":"/git","title":"Git"}}},{"node":{"frontmatter":{"order":"10D","path":"/grid-and-breakpoints","title":"Grid and Breakpoints"}}},{"node":{"frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input"}}},{"node":{"frontmatter":{"order":"4B","path":"/hooks","title":"Hooks"}}},{"node":{"frontmatter":{"order":"8A","path":"/intermediate-react-v3","title":"Welcome"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"15G","path":"/istanbul","title":"Istanbul"}}},{"node":{"frontmatter":{"order":"4A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"5D","path":"/managing-state-in-class-components","title":"Managing State in Class Components"}}},{"node":{"frontmatter":{"order":"15E","path":"/mocks","title":"Mocks"}}},{"node":{"frontmatter":{"order":"3A","path":"/npm","title":"npm"}}},{"node":{"frontmatter":{"order":"3E","path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":"6C","path":"/portals-and-refs","title":"Portals and Refs"}}},{"node":{"frontmatter":{"order":"10E","path":"/positioning","title":"Positioning"}}},{"node":{"frontmatter":{"order":"3B","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"14E","path":"/providers","title":"Providers"}}},{"node":{"frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"4G","path":"/react-dev-tools","title":"React Dev Tools"}}},{"node":{"frontmatter":{"order":"5A","path":"/react-router","title":"React Router"}}},{"node":{"frontmatter":{"order":"14B","path":"/reducers","title":"Reducers"}}},{"node":{"frontmatter":{"order":"14G","path":"/redux-dev-tools","title":"Redux Dev Tools"}}},{"node":{"frontmatter":{"order":"14A","path":"/redux-getting-started","title":"Getting Started"}}},{"node":{"frontmatter":{"order":"12A","path":"/server-side-rendering","title":"Server Side Rendering"}}},{"node":{"frontmatter":{"order":"15F","path":"/snapshots","title":"Snapshots"}}},{"node":{"frontmatter":{"order":"12B","path":"/streaming-markup","title":"Streaming Markup"}}},{"node":{"frontmatter":{"order":"10B","path":"/tailwind-basics","title":"Tailwind Basics"}}},{"node":{"frontmatter":{"order":"10C","path":"/tailwind-plugins","title":"Tailwind Plugins"}}},{"node":{"frontmatter":{"order":"15D","path":"/testing-custom-hooks","title":"Testing Custom Hooks"}}},{"node":{"frontmatter":{"order":"15A","path":"/testing-react","title":"Intro to Testing React"}}},{"node":{"frontmatter":{"order":"15C","path":"/testing-ui-interactions","title":"Testing UI Interactions"}}},{"node":{"frontmatter":{"order":"13K","path":"/ts-app","title":"App"}}},{"node":{"frontmatter":{"order":"13F","path":"/ts-carousel","title":"Carousel"}}},{"node":{"frontmatter":{"order":"13D","path":"/ts-details","title":"Details"}}},{"node":{"frontmatter":{"order":"13E","path":"/ts-error-boundary","title":"ErrorBoundary"}}},{"node":{"frontmatter":{"order":"13B","path":"/ts-eslint","title":"TypeScript + ESLint"}}},{"node":{"frontmatter":{"order":"13A","path":"/ts-modal","title":"Modal"}}},{"node":{"frontmatter":{"order":"13G","path":"/ts-pet","title":"Pet"}}},{"node":{"frontmatter":{"order":"13J","path":"/ts-results","title":"Results"}}},{"node":{"frontmatter":{"order":"13I","path":"/ts-searchParams","title":"SearchParams"}}},{"node":{"frontmatter":{"order":"13C","path":"/ts-theme-context","title":"ThemeContext"}}},{"node":{"frontmatter":{"order":"13H","path":"/ts-usebreedlist","title":"useBreedList"}}},{"node":{"frontmatter":{"order":"9G","path":"/usecallback","title":"useCallback"}}},{"node":{"frontmatter":{"order":"9C","path":"/usecontext","title":"useContext"}}},{"node":{"frontmatter":{"order":"9J","path":"/usedebugvalue","title":"useDebugValue"}}},{"node":{"frontmatter":{"order":"9B","path":"/useeffect-2","title":"useEffect"}}},{"node":{"frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"9I","path":"/useimperativehandle","title":"useImperativeHandle"}}},{"node":{"frontmatter":{"order":"9H","path":"/uselayouteffect","title":"useLayoutEffect"}}},{"node":{"frontmatter":{"order":"9F","path":"/usememo","title":"useMemo"}}},{"node":{"frontmatter":{"order":"9E","path":"/usereducer","title":"useReducer"}}},{"node":{"frontmatter":{"order":"9D","path":"/useref","title":"useRef"}}},{"node":{"frontmatter":{"order":"9A","path":"/usestate","title":"useState"}}},{"node":{"frontmatter":{"order":"7B","path":"/ways-to-expand-your-app","title":"Ways to Expand on this Project"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2959687377"]}